'''
3). Массив размером 2m + 1, где m — натуральное число, заполнен случайным образом.
Найдите в массиве медиану. Медианой называется элемент ряда, делящий его на две равные части:
в одной находятся элементы, которые не меньше медианы, в другой — не больше медианы.

Примечание: задачу можно решить без сортировки исходного массива.
Но если это слишком сложно, используйте метод сортировки, который не рассматривался на уроках
(сортировка слиянием также недопустима).
'''
'''
Вариант №1
а) про то как заполнен массив, кроме того что это должно быть "случайно" = ничего не скзано
тут речь про разрывы между числами в массиве (как в варианте № 2). 
При заполнении рандомно, но подряд = вроде работает стабильно. 
)) и ...кстати, можно было не писать весь код...ибо введенное число m = медиана)) 
при условии, что в массиве не четное кол-во чисел и они не имеют повторений и пропусков)..
но...это вывод получился через написание целого куска "говнокода"
уж не знаю = зачтется ли такое решение))??
...на втором варианте (который решался первым): кончились патроны((
сдаю как есть.
'''
import random

m = int(input('Вариант №1: введите m:'))
N = 2 * m + 1

a = list(range(N))
random.shuffle(a)
for i in a:
    print(i, end='  ')
print(f' Длина массива = {len(a)}')

y = len(a) // 2
middle = sum(a) / len(a)
buff = []
muff = []
i = 0
while i < (y):
    for i, item in enumerate(a):

        if item <= middle:
            muff.append(item)
            i += 1
        if item >= middle:
            buff.append(item)
            i += 1

    if len(muff) > len(buff):
        break
    else:
        print(f'Медиана тут:{min(buff)}')
print(f'muff< {muff}')
print(f'buff> {buff}')

#*********************************%%%%%%%%%%%%%%%%******************************
'''
Вариант №2 !!! работает через раз ...
Вариант 2 я решал первым и в нем столкнулся с трудностью:
 1) НЕ получается заполние массива не повторяющимися рандомными числами, ибо с ними(повторения) = вариант 2 работает не корректно
 пробовал использовать set - теряю целостность массива, и он перестает отвечать условиям задачи
 пробовал перемешать shuffle - вместе с randint = не работает. Другой способ заполнить массив 
 рандомно, но при этом числами с пропусками и без повторений = НЕ получилось. 
 буду признателен за совет как решить этот вопрос
 2) с большим разрывом между числами..тогда тоже не "айс" = теряется привязка к среднему арифметическому
 вывод = НЕ верное решение!! 
 .но все равно сдаю, имхо для показать ход мыслей.. ну и может подсказку получить (на будущее)
!!! Пока решение работает через раз. Т.е. = если в заданных числах слишком большой разрыв
медиана выводится не корректно, и если есть повторяющиеся числа = тоже не корректно
Пока не знаю как решить....кончились патроны..
'''
from random import random,randint
m = int(input('Вариант № 2 "грустный": введите m:'))
N = 2*m+1
a = []
for i in range(N):
    a.append(randint(1, 99))
print(f'Исходный массив: {a}')


y= len(a)//2
middle = sum(a)/ len(a)

buff =[]
muff =[]
i=0
while i < (y):
    for i,item in enumerate(a):

        if item <= middle:

            muff.append(item)
            i+=1

        if item >= middle:
            buff.append(item)
            i+=1

    if len(muff)> len(buff):

        print(f'Медиана: {max(muff)}')
        break
    else:
        print(f'Медиана:{min(buff)}')
print(f'muff< {muff}')
print(f'buff> {buff}')
   # print(a)
